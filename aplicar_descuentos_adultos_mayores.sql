-- Script para aplicar descuentos a pacientes adultos mayores y auditar el proceso

-- Crear tabla de atenciones de pacientes
CREATE TABLE ATENCION (
    CODIGO_ATENCION INT PRIMARY KEY,
    COSTO NUMERIC(10, 2),
    FECHA_ATENCION DATE,
    FECHA_NACIMIENTO DATE
);

-- Tabla de porcentaje de descuento por rango de edad
CREATE TABLE PORC_DESCTO_3RA_EDAD (
    EDAD_MINIMA INT,
    EDAD_MAXIMA INT,
    PORCENTAJE_DESCUENTO NUMERIC(5, 2)
);

-- Tabla para auditoría de descuentos aplicados
CREATE TABLE AUDITORIA_DESCUENTOS (
    ID_AUDITORIA INT PRIMARY KEY,
    CODIGO_ATENCION INT,
    COSTO_ANTERIOR NUMERIC(10, 2),
    EDAD_PACIENTE INT,
    PORCENTAJE_DESCUENTO NUMERIC(5, 2),
    COSTO_ACTUALIZADO NUMERIC(10, 2)
);

-- Secuencia para generar IDs de auditoría
CREATE SEQUENCE SEQ_AUDITORIA;

-- Función para calcular la edad de los pacientes
CREATE OR REPLACE FUNCTION FN_CALCULAR_EDAD(FECHA_NACIMIENTO DATE) 
RETURNS INT AS $$
DECLARE
    EDAD INT;
BEGIN
    EDAD := EXTRACT(YEAR FROM AGE(CURRENT_DATE, FECHA_NACIMIENTO));
    RETURN EDAD;
END;
$$ LANGUAGE plpgsql;

-- Función para obtener el porcentaje de descuento según la edad
CREATE OR REPLACE FUNCTION FN_OBTENER_DESCUENTO(EDAD INT) 
RETURNS NUMERIC AS $$
DECLARE
    PORCENTAJE NUMERIC(5, 2);
BEGIN
    SELECT PORCENTAJE_DESCUENTO 
    INTO PORCENTAJE
    FROM PORC_DESCTO_3RA_EDAD
    WHERE EDAD BETWEEN EDAD_MINIMA AND EDAD_MAXIMA;
    
    RETURN COALESCE(PORCENTAJE, 0); -- Devolver 0 si no hay descuento aplicable
END;
$$ LANGUAGE plpgsql;

-- Procedimiento para actualizar el costo de la atención
CREATE OR REPLACE PROCEDURE SP_ACTUALIZAR_COSTO(CODIGO_ATENCION INT, COSTO_ACTUALIZADO NUMERIC) 
LANGUAGE plpgsql
AS $$
BEGIN
    UPDATE ATENCION
    SET COSTO = COSTO_ACTUALIZADO
    WHERE CODIGO_ATENCION = CODIGO_ATENCION;
END;
$$;

-- Procedimiento para insertar registros de auditoría
CREATE OR REPLACE PROCEDURE SP_INSERTAR_AUDITORIA(
    CODIGO_ATENCION INT, 
    COSTO_ANTERIOR NUMERIC, 
    EDAD_PACIENTE INT, 
    PORCENTAJE NUMERIC, 
    COSTO_ACTUALIZADO NUMERIC) 
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO AUDITORIA_DESCUENTOS (
        ID_AUDITORIA, CODIGO_ATENCION, COSTO_ANTERIOR, EDAD_PACIENTE, PORCENTAJE_DESCUENTO, COSTO_ACTUALIZADO
    ) VALUES (
        NEXTVAL('SEQ_AUDITORIA'), 
        CODIGO_ATENCION, 
        COSTO_ANTERIOR, 
        EDAD_PACIENTE, 
        PORCENTAJE, 
        COSTO_ACTUALIZADO
    );
END;
$$;

-- Procedimiento principal para aplicar descuentos a pacientes adultos mayores
CREATE OR REPLACE PROCEDURE SP_APLICAR_DESCUENTOS() 
LANGUAGE plpgsql
AS $$
DECLARE
    CURSOR_PACIENTES CURSOR FOR 
        SELECT CODIGO_ATENCION, COSTO, FECHA_NACIMIENTO 
        FROM ATENCION
        WHERE FECHA_ATENCION BETWEEN '2024-01-01' AND '2024-06-30'
          AND FN_CALCULAR_EDAD(FECHA_NACIMIENTO) >= 60;

    CODIGO_ATENCION INT;
    COSTO NUMERIC(10, 2);
    FECHA_NACIMIENTO DATE;
    EDAD INT;
    PORCENTAJE NUMERIC(5, 2);
    COSTO_ACTUALIZADO NUMERIC(10, 2);
    COSTO_ANTERIOR NUMERIC(10, 2);
BEGIN
    OPEN CURSOR_PACIENTES;
    FETCH CURSOR_PACIENTES INTO CODIGO_ATENCION, COSTO, FECHA_NACIMIENTO;

    WHILE FOUND LOOP
        -- Calcular la edad y el porcentaje de descuento
        EDAD := FN_CALCULAR_EDAD(FECHA_NACIMIENTO);
        PORCENTAJE := FN_OBTENER_DESCUENTO(EDAD);
        
        -- Calcular nuevo costo con descuento
        COSTO_ANTERIOR := COSTO;
        COSTO_ACTUALIZADO := COSTO - (COSTO * PORCENTAJE / 100);
        
        -- Actualizar costo en la tabla ATENCION
        PERFORM SP_ACTUALIZAR_COSTO(CODIGO_ATENCION, COSTO_ACTUALIZADO);
        
        -- Insertar cambios en auditoría
        PERFORM SP_INSERTAR_AUDITORIA(CODIGO_ATENCION, COSTO_ANTERIOR, EDAD, PORCENTAJE, COSTO_ACTUALIZADO);
        
        FETCH CURSOR_PACIENTES INTO CODIGO_ATENCION, COSTO, FECHA_NACIMIENTO;
    END LOOP;

    CLOSE CURSOR_PACIENTES;
END;
$$;

-- Ejecutar el procedimiento principal para aplicar los descuentos
CALL SP_APLICAR_DESCUENTOS();
